name: EC2 Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Get GitHub Action Runner IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Set Environment Variables
        run: echo "AWS_DEFAULT_REGION=ap-northeast-2" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Add GitHub Actions IP to Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2

      - name: Execute Remote SSH Commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            #!/bin/bash

            API_DIR="/home/ubuntu/Blog_API"

            log_message() {
                echo "$(date '+%Y-%m-%d %H:%M:%S') - $1"
            }

            update_api_repo() {
                log_message "Navigating to API directory: $API_DIR"
                if ! cd "$API_DIR"; then
                    log_message "Failed to access the directory: $API_DIR"
                    return 1
                fi

                log_message "Pulling the latest changes from Git"
                if ! git pull; then
                    log_message "Git pull failed in directory: $API_DIR"
                    return 1
                fi

                log_message "Git pull completed successfully"
                return 0
            }

            restart_flask_service() {
                log_message "Restarting Flask service"
                if ! sudo systemctl restart flask-chatbot; then
                    log_message "Failed to restart Flask service"
                    return 1
                fi
                log_message "Flask service restarted successfully"
            }

            main() {
                log_message "Starting main deployment process"

                if ! update_api_repo; then
                    return 1
                fi

                if ! restart_flask_service; then
                    return 1
                fi

                log_message "Deployment completed successfully"
            }

            main
          command_timeout: 30m  # Increase the command timeout to 30 minutes
          timeout: 60m  # Increase the overall timeout to 60 minutes

      - name: Remove GitHub Actions IP from Security Group
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2
